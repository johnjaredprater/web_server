name: Build & Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write

jobs:
  
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - uses: pre-commit/action@v3.0.1

  build-release:
    runs-on: ubuntu-latest
    steps:
    - 
      uses: actions/checkout@v4
    -
      name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
    - 
      run: npm ci
    - 
      run: npm test
    -
      name: Create Release
      id: release
      uses: googleapis/release-please-action@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release-type: simple
        # release-type: node
        # extra-files: |
        #   deployment.yaml
    - 
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - 
      name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        username: johnjaredprater
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: johnjaredprater/web_server
        tags: |
          ${{ steps.release.outputs.version }}
    -
      name: Build
      run: |
        export REACT_APP_VERSION=$DOCKER_METADATA_OUTPUT_VERSION
        npm run build --if-present
    -
      name: Containerize and Push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Update Kubernetes YAML with new Docker tag
      if: ${{ steps.release.outputs.version != '' }}
      run: .github/update-k8s-tag.sh ${{ steps.release.outputs.version }}